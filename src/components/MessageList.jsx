'use strict';

import React from 'react';
import Firebase from 'firebase';
import _ from 'lodash';
import mui from 'material-ui';
import Message from './Message.jsx';

var {Card, List} = mui;


class MessageList extends React.Component {

  constructor(props) {
    super(props);
    this.state = {
    messages: {} 
    };
    
    this.firebaseRef = new Firebase('https://chatty-chatty.firebaseio.com/messages');
    // this function is called every child; ie it iterates over all children...makes sense now
    // keys for the object are generated by firebase
    this.firebaseRef.on('child_added', (message) => {
      // If the message key already exists, return
      if (this.state.messages[message.key()]) {
        return;
      } 
      let messageVal = message.val();
      messageVal.key = message.key();
      this.state.messages[messageVal.key] = messageVal;
      
      this.setState({
        messages: this.state.messages
      });
    });
  }
  
  render() {
    var messageNodes = _.values(this.state.messages).map((message) => {
      return (
        <Message message={message.message} />
      );
    });
    
    return (
      <Card className='flex-grow-two left-margin'>
        <List>{messageNodes}</List>
      </Card>
    );
  }
}

export default MessageList;